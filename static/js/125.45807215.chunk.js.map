{"version":3,"file":"static/js/125.45807215.chunk.js","mappings":"sNACA,EAA4B,+BAA5B,EAAqE,6BAArE,EAAyG,0BAAzG,EAA2I,2BAA3I,EAA+K,4BAA/K,EAAoN,4BAApN,EAA2P,8BAA3P,EAAgS,0BAAhS,EAA4U,qCAA5U,EAA4X,8B,SCuD5X,EAlDoB,SAAC,GAAiC,IAA/BA,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WAEhC,EAAsCC,EAAAA,SAAe,IAArD,eAAOC,EAAP,KAAoBC,EAApB,KASA,OAPAF,EAAAA,WAAgB,YACZ,uBAAC,0GAC0BG,EAAAA,EAAAA,GAAsBL,GADhD,OACSM,EADT,OAEGF,EAAeE,GAFlB,0CAAD,EAIH,GAAE,CAACN,KAGA,iBAAKO,UAAWC,EAAhB,WACI,gBAAID,UAAWC,EAAf,2BAA6CP,EAAWQ,SACxD,eAAIF,UAAWC,EAAf,SACKL,EAAYO,KAAI,SAACC,GAAD,OAEb,eAAIJ,UAAWC,EAAf,UACI,iBAAKD,UAAWC,EAAhB,WAEI,SAAC,KAAD,CAAMD,UAAWC,EAAaI,GAAE,mBAAcD,EAAQE,IAAtD,UACI,eAAIN,UAAWC,EAAf,SAA8BG,EAAQF,UAK1C,iBAAKF,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACI,cAAGD,UAAWC,EAAd,oBACA,eAAGD,UAAWC,EAAd,UAA8BG,EAAQG,SAAtC,WAEJ,iBAAKP,UAAWC,EAAhB,WACI,cAAGD,UAAWC,EAAd,sBACA,cAAGD,UAAWC,EAAd,SAA8BG,EAAQI,QAAQC,OAAO,EAAG,SAE5D,iBAAKT,UAAWC,EAAhB,WACI,cAAGD,UAAWC,EAAd,uBACA,cAAGD,UAAWC,EAAd,SAA8BG,EAAQI,QAAQC,OAAO,EAAG,eApBvCL,EAAQE,GAF5B,QAiChC,C","sources":["webpack://rickandmorty/./src/components/CharacterPage/EpisodeList/EpisodeList.module.css?2485","components/CharacterPage/EpisodeList/EpisodeList.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"EpisodeList_container__btbxq\",\"element\":\"EpisodeList_element__l8YmP\",\"list\":\"EpisodeList_list__Ca3wz\",\"title\":\"EpisodeList_title__BADgn\",\"title2\":\"EpisodeList_title2__gJG64\",\"status\":\"EpisodeList_status__S1WwF\",\"subtitle\":\"EpisodeList_subtitle__0RVMz\",\"link\":\"EpisodeList_link__uGp7z\",\"container_block\":\"EpisodeList_container_block__6xWzh\",\"element2\":\"EpisodeList_element2__9PglS\"};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeConcurrentRequest } from '../../../utils/network';\r\n\r\nimport styles from './EpisodeList.module.css';\r\n\r\nconst EpisodeList = ({ episodeList, personInfo }) => {\r\n\r\n    const [episodeName, setEpisodeName] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        (async () => {\r\n            const response = await makeConcurrentRequest(episodeList);\r\n            setEpisodeName(response);\r\n        })();\r\n    }, [episodeList]);\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <h2 className={styles.title2}>Episodes with {personInfo.name}</h2>\r\n            <ul className={styles.container}>\r\n                {episodeName.map((element) =>\r\n\r\n                    <li className={styles.list} key={element.id}>\r\n                        <div className={styles.element}>\r\n\r\n                            <Link className={styles.link} to={`/episode/${element.id}`}>\r\n                                <h2 className={styles.title}>{element.name}</h2>\r\n                            </Link>\r\n\r\n\r\n\r\n                            <div className={styles.container_block}>\r\n                                <div className={styles.element2}>\r\n                                    <p className={styles.subtitle}>date:</p>\r\n                                    <p className={styles.status}>{element.air_date} </p>\r\n                                </div>\r\n                                <div className={styles.element2}>\r\n                                    <p className={styles.subtitle}>season:</p>\r\n                                    <p className={styles.status}>{element.episode.substr(1, 2)}</p>\r\n                                </div>\r\n                                <div className={styles.element2}>\r\n                                    <p className={styles.subtitle}>episode:</p>\r\n                                    <p className={styles.status}>{element.episode.substr(4, 5)}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EpisodeList;"],"names":["episodeList","personInfo","React","episodeName","setEpisodeName","makeConcurrentRequest","response","className","styles","name","map","element","to","id","air_date","episode","substr"],"sourceRoot":""}